function y = simulate_nonlinear_measurements(x, noisy, R)
    %y = [wrapToPi(atan2((x(:,5)-x(:,2)), (x(:,4)-x(:,1)))-x(:,3)), ...
    %     sqrt((x(:,1)-x(:,4)).^2+(x(:,2)-x(:,5)).^2), ...
    %     wrapToPi(atan2((x(:,2)-x(:,5)), (x(:,1)-x(:,4)))-x(:,6)), ...
    %     x(:,4), ...
    %     x(:,5)];
     
    %y(1,:) = [nan, nan, nan, nan, nan];  % measurements only available at k=1 onwards

    %if noisy
    %    y = y + mvnrnd(zeros(size(y)), R);
    %end
    y = [wrapToPi(atan2((x(:,5)-x(:,2)), (x(:,4)-x(:,1)))-x(:,3)), ...
         sqrt((x(:,1)-x(:,4)).^2+(x(:,2)-x(:,5)).^2), ...
         wrapToPi(atan2((x(:,2)-x(:,5)), (x(:,1)-x(:,4)))-x(:,6)), ...
         x(:,4), ...
         x(:,5)];
     
    %y(1,:) = [nan, nan, nan, nan, nan];  % measurements only available at k=1 onwards

    if noisy
        y = y + mvnrnd(zeros(size(y)), R);
    end
end